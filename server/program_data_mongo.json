[
  {
    
    "preview link": "https://drive.google.com/file/d/1QO0a6YrcD-69Azt84tAhrQiXiRZ2u8eB/view?usp=sharing",
    "page description ": "This Python program creates an animated countdown followed by a heart drawing using the Turtle graphics module. The screen is initialized with a black background and a centered white text displaying \"Starting in 15...\". A turtle named `counter` is used to display the countdown text on the screen. The `countdown()` function updates this message every second, counting down from 15 to 1, and then briefly displays \"Let's go!\" before clearing the screen.After the countdown, the program switches to drawing a heart shape using the main Turtle cursor. The `draw_heart()` function sets the drawing speed, pen size, and color, and begins filling the shape with red. The heart is created using a combination of straight lines and a custom `curve()` function that draws a smooth arc by moving the turtle forward slightly and turning it one degree at a time in a loop.The result is a symmetrical red heart shape centered on the screen. Once the drawing is complete, the turtle is hidden to enhance the visual appeal, and `turtle.done()` is called to keep the window open. This program is an engaging way to combine animation, countdowns, and basic shape drawing using Turtle in Python.",
    "File Name ": "Heart Animation",
    "short description ": "This Python program uses the Turtle graphics library to create a heart animation with a countdown.It sets up a black screen and displays a countdown from 15 seconds using a white turtle.After the countdown, it draws a red heart using turtle movements and curves.The heart is filled with red color and has smooth, rounded edges.The program ends by hiding the turtle and keeping the window open.",
    "download link": "https://drive.usercontent.google.com/download?id=1QO0a6YrcD-69Azt84tAhrQiXiRZ2u8eB&export=download&authuser=2&confirm=t&uuid=deb2ec69-bd93-4cff-a128-f53f5fd0c424&at=AN8xHoo1MgvTB9OFQW5Arnz6KkYV:1757524125891",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=17i5j67eaiPkpOOAwcX-xwOav2VWJ97b1"
  },
  {
    
    "preview link": "https://drive.google.com/file/d/11gbfzszYP62Jqc1xz7-4HhObGIn1GlCw/view?usp=sharing",
    "page description ": "This Python program uses the Turtle graphics module to create an animated countdown followed by a colorful geometric pattern. The program begins by initializing a turtle screen with a black background and a centered title. A hidden turtle named counter displays a countdown starting from 15 seconds, with the text \"Starting in X...\" updated every second. After the countdown reaches zero, the message \"Let's go!\" briefly appears before clearing the screen.\n\nOnce the countdown completes, a second turtle (t) begins drawing a vibrant circular art piece. The turtle’s speed is set to the maximum for smooth drawing, and it cycles through six colors: red, orange, yellow, green, blue, and purple. In a loop that runs 36 times, the turtle draws a circle with a radius of 100 units, then rotates 10 degrees to the left. This creates a series of overlapping, multicolored circles arranged in a symmetrical spiral pattern.\n\nThe result is a visually engaging, kaleidoscope-like image that showcases basic loops, color cycling, and angle rotation in Turtle graphics. Finally, the turtle is hidden to improve visual appeal, and turtle.done() keeps the drawing on screen. This project is ideal for beginners exploring animation and graphics in Python.",
    "File Name ": "circle flower",
    "short description ": "This Python Turtle program displays a countdown before drawing colorful circular art.\nIt uses a white turtle to count down from 15 seconds on a black screen.\nAfter the countdown, a new turtle draws 36 overlapping colored circles.\nEach circle is rotated slightly to form a vibrant spiral pattern.\nThe program ends by hiding the turtle and keeping the window open.",
    "download link": "https://drive.usercontent.google.com/download?id=11gbfzszYP62Jqc1xz7-4HhObGIn1GlCw&export=download&authuser=1&confirm=t&uuid=05a2a180-6fbf-49a2-b276-c8c582a0c95c&at=AN8xHop-Rjpgjh9LqEYwb98zyLPM:1757997595469",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=17i5j67eaiPkpOOAwcX-xwOav2VWJ97b1"
  },
  {
    "preview link": "https://drive.google.com/file/d/1GuMCVXt8lTUKq_a8LVKTwYSxZlfxBTQV/view?usp=sharing",
    "page description ": "This Python program uses the Turtle graphics module to produce a simple yet elegant animation combining a countdown timer and a geometric drawing. The screen is set with a black background and a centered title. A hidden turtle named counter displays a countdown from 15 seconds, updating the center screen every second with \"Starting in X...\" messages in white text. Once the countdown ends, the message \"Let's go!\" briefly appears before clearing.\n\nAfter the countdown, a new turtle is used to create a square spiral pattern. The turtle is set to maximum drawing speed and draws in white with a pen size of 2, maintaining visual clarity against the dark background. Using a loop that runs 100 times, the turtle moves forward by an incrementally increasing distance (i * 5) and turns right by 90 degrees on each iteration. This results in a clean and expanding square spiral that radiates outward in consistent angles.\n\nThe drawing concludes with the turtle being hidden for a cleaner presentation, and turtle.done() keeps the Turtle graphics window open so users can admire the finished artwork. This project is a great introduction to loops, angles, and creative use of Turtle in Python.",
    "File Name ": "square_spiral",
    "short description ": "This Python Turtle program creates a countdown followed by a geometric spiral.\nIt starts with a 15-second countdown shown in white text on a black screen.\nAfterward, a turtle draws a square spiral using increasing lengths and right turns.\nThe design is made with white lines, giving it a clean, modern look.\nThe program ends by hiding the turtle and keeping the drawing visible.",
    "download link": "https://drive.usercontent.google.com/download?id=1GuMCVXt8lTUKq_a8LVKTwYSxZlfxBTQV&export=download&authuser=1&confirm=t&uuid=a5d03d22-2688-4193-b638-fffbbad40214&at=AN8xHopgPRbGhdq7cLnlztCoSgUx:1757997751288",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=1-fLo8OcVj7tLhixeN35jjGi8WDdOSwPk"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/16EG8ROaMo1ZKu7I8kdsnED2j8NeNRk_9/view?usp=sharing",
    "page description ": "This Python program demonstrates the use of the Turtle graphics library to create an interactive and visually appealing drawing. The script begins by setting up a black background screen with a custom title using the turtle.Screen() method. It then creates a separate turtle named counter to handle on-screen text display for a countdown timer. The countdown() function takes an input number of seconds and displays a decreasing timer message in the center of the screen using the write() method. Each number stays on screen for one second with a short pause using the Python time.sleep() function, giving the appearance of a live countdown.\n\nOnce the countdown finishes, the text “Let’s go!” appears briefly to signal the start of the drawing phase. Another turtle named t is then used to draw a yellow five-pointed star. The turtle is set with a thicker pen size and fill color. Using a for loop, it moves forward 200 units and turns right 144 degrees repeatedly, which geometrically forms a perfect star. The shape is filled with color and the turtle is hidden at the end. This program creatively blends timing, animation, and geometric design to produce engaging turtle art.",
    "File Name ": "star",
    "short description ": "This Python program uses the Turtle graphics module to create an animated art display.\nIt begins with a countdown timer displayed on the screen.\nAfter the countdown, a colorful star is drawn using turtle graphics.\nThe program combines animation, user interface, and geometric drawing in one script.",
    "download link": "https://drive.usercontent.google.com/download?id=16EG8ROaMo1ZKu7I8kdsnED2j8NeNRk_9&export=download&authuser=1&confirm=t&uuid=81b0c4ae-30aa-4bb4-9213-b5a2e78fe830&at=AN8xHoqhZmVZp2J5UIlGN0Uz37-M:1757997757386",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=1-fLo8OcVj7tLhixeN35jjGi8WDdOSwPk"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/1RW2l02YeyLImoGXClugogoTvRwBMA30o/view?usp=sharing",
    "page description ": "This Python program demonstrates how to use the Turtle graphics library along with the Python time module to create an interactive countdown and spiral art animation. It begins by setting up a black background and a titled drawing window using the turtle.Screen() object. A turtle object named counter is created specifically to display countdown text on the screen. It is hidden, set to white color, and positioned at the center of the screen.\n\nThe program defines a countdown() function that takes a number of seconds as input. It loops from the given number down to one, updating the screen with the current countdown number using write() while pausing one second between updates using time.sleep(). After the countdown reaches zero, a “Let’s go!” message appears briefly to signal the start of the drawing.\n\nA second turtle named t is then used to draw the actual artwork. It is set to a cyan pen color and maximum drawing speed (speed(0)) for smooth animation. Using a for loop running 200 times, the turtle moves forward increasing distances (i*2) and turns right by 91 degrees each time. This creates a gradually expanding spiral pattern, producing an attractive and colorful geometric design.",
    "File Name ": "spiral_square",
    "short description ": "This Python script uses Turtle graphics to create a countdown followed by spiral art.\nIt displays a 15-second countdown timer at the center of the screen.\nAfter the countdown, a cyan spiral pattern is drawn continuously.\nThe program combines time-based animation and geometric drawing in one project.",
    "download link": "https://drive.usercontent.google.com/download?id=1RW2l02YeyLImoGXClugogoTvRwBMA30o&export=download&authuser=1&confirm=t&uuid=e43bb449-8318-46b9-922c-a591c0dc7195&at=AN8xHorowtr64gtc5dMTq9H_94Zf:1757997739781",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=1TAIul6-q-TAOQjTTvixz-sWmIeutdsDE"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/1dIwXfYYa-9yJ6QNGH1s4QOklfK8hjPrZ/view?usp=sharing",
    "page description ": "This Python script leverages the Turtle Graphics module to produce a captivating animated art pattern on a black background. When executed, the program first displays a visible turtle cursor and presents a countdown from 15 seconds in the center of the screen. This countdown is designed to build anticipation, giving viewers time to prepare before the drawing begins. The text is displayed in white with a bold Arial font, and each number stays on screen for one second using the time.sleep() function.\n\nAfter the countdown completes, the screen is cleared and the turtle moves back to the center. The drawing phase starts with a hue value initialized to zero, and the script uses the colorsys library to convert HSV values into RGB colors. This allows for smooth and continuous transitions across the color spectrum as the turtle draws. The design is created through two nested loops: the outer loop repeats 16 times, while the inner loop draws 18 progressively smaller circular arcs combined with rotations. As the hue value increases slightly each iteration, the colors smoothly shift, creating a rainbow-like spiral floral pattern.\n\nThe final output is an eye-catching, colorful geometric artwork that continuously evolves on the screen.",
    "File Name ": "Prismatic Mandala",
    "short description ": "This Python program uses the Turtle Graphics library to create a mesmerizing spiral art.\nIt begins with a 15-second countdown displayed on the screen.\nThen, colorful circular patterns are drawn using HSV color transitions.\nThe artwork evolves through looping shapes forming a hypnotic design.",
    "download link": "https://drive.usercontent.google.com/download?id=1dIwXfYYa-9yJ6QNGH1s4QOklfK8hjPrZ&export=download&authuser=1&confirm=t&uuid=f79222ad-d2d0-4c3d-b895-384ab02a7e3a&at=AN8xHopvuPiT0nEHZ8KRVcBu-Hl4:1757997806335",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=1TAIul6-q-TAOQjTTvixz-sWmIeutdsDE"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/1gdtkddzKCEov5IqqqrVqLCMbXOO_f_FD/view?usp=sharing",
    "page description ": "This Python script combines the Turtle module, the colorsys library, and time to produce an animated rainbow spiral pattern after a countdown. The program sets up a black background using screen.bgcolor('black') and creates two turtles: t for drawing and countdown for displaying text. The drawing turtle is configured at maximum speed (speed(0)) for fast and smooth animation.\n\nBefore the art begins, a 15-second countdown appears at the center of the screen. The countdown turtle displays “Starting in X...” using write(), and time.sleep(1) creates the one-second pauses. This makes the program interactive and builds anticipation.\n\nAfter the countdown, the drawing phase starts. The main loop runs 360 times, rotating slightly (left(1)), moving forward, and drawing small circles to form intricate spiral loops. The colorsys.hsv_to_rgb() function gradually changes the hue value h over time, producing a continuous spectrum of colors as the turtle draws. This method ensures each segment has a slightly different color, creating a smooth rainbow gradient.\n\nAs the turtle repeatedly draws overlapping circular arcs while rotating, it generates a complex spiraling pattern with vibrant colors. The result is a captivating piece of animated art that appears to swirl and glow on the screen.",
    "File Name ": "Chroma Helix",
    "short description ": "This Python program uses Turtle graphics to create colorful spiral art.\nIt starts with a 15-second countdown on a black background.\nThen, it draws looping circular patterns with smoothly shifting rainbow colors.\nThe hue transitions continuously, giving a dynamic and hypnotic visual effect.",
    "download link": "https://drive.usercontent.google.com/download?id=1gdtkddzKCEov5IqqqrVqLCMbXOO_f_FD&export=download&authuser=1&confirm=t&uuid=e824e9f2-4491-4625-aa9a-29f789f8a41a&at=AN8xHooh4zGYNVhGpPXDNiwF5PNR:1757997821000",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=17i5j67eaiPkpOOAwcX-xwOav2VWJ97b1"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/1VRsj_Vq2n4umid5wds_EyD6s3pa_9VpM/view?usp=sharing",
    "page description ": "This Python program employs the Turtle module and time library to create an animated geometric art pattern with a countdown. The screen is initialized with a black background (screen.bgcolor('black')) and titled “Turtle Art with Countdown”. A dedicated turtle named counter is used solely for displaying text on the screen. It is hidden, set to white color, and positioned at the center.\n\nBefore the drawing begins, a countdown function runs for 15 seconds. Inside this function, the counter turtle displays “Starting in X...” where X decreases every second. The screen updates after each change, and time.sleep(1) creates the delay. Once the countdown reaches zero, “Let’s go!” appears briefly before clearing the screen.\n\nAfter the countdown, the main drawing turtle t begins creating the art. It is set to lime color, a pen size of 2, and maximum speed (speed(0)) for fast drawing. The drawing loop runs 60 times. In each iteration, the turtle draws an equilateral triangle (three sides of 100 units with 120° turns) and then rotates left by 6°.\n\nAs these triangles overlap and rotate, they form a complex radial pattern resembling a glowing lime-colored flower or starburst on the black background.",
    "File Name ": "triangle_flower",
    "short description ": "This Python script uses Turtle graphics to draw a rotating triangle pattern.\nIt starts with a 15-second countdown on a black background.\nAfter the countdown, lime-colored triangles are drawn repeatedly in rotation.\nThe overlapping shapes create a geometric, flower-like visual design.",
    "download link": "https://drive.usercontent.google.com/download?id=1VRsj_Vq2n4umid5wds_EyD6s3pa_9VpM&export=download&authuser=1&confirm=t&uuid=12eae1e4-40fa-4f46-969f-bd4e830f22bb&at=AN8xHorMbZgPMAaoAJqVB46KN8df:1757997639603",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=1-fLo8OcVj7tLhixeN35jjGi8WDdOSwPk"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/18oa5KrY5plBS4ryoe6--47p9hOF27Cwh/view?usp=sharing",
    "page description ": "This Python program combines the Turtle graphics library with the Python time module to create an interactive countdown followed by a geometric art display. It starts by setting up the drawing environment using turtle.Screen() with a black background and a custom title. A separate turtle object called counter is created to handle the text display for the countdown. This turtle is hidden, set to white color, and placed at the center of the screen.\n\nThe countdown() function handles the timer. It takes a specified number of seconds and loops from that number down to one, updating the display each second using the write() method while pausing briefly using time.sleep(1). Once the countdown reaches zero, it displays the message “Let’s go!” before clearing the screen to begin drawing.\n\nAfter the countdown finishes, a new turtle t is created for drawing. It is set to cyan color and maximum drawing speed (speed(0)) for smooth output. The drawing loop first creates a five-sided polygon (pentagon) and then rotates the turtle slightly before drawing the next one. This process repeats 36 times with a 10-degree rotation each cycle, forming a circular pattern of overlapping pentagons, producing a captivating geometric art design.",
    "File Name ": "pentagon_web",
    "short description ": "This Python script uses Turtle graphics to display a countdown and then draw geometric art.\nIt shows a 15-second countdown in the center of the screen.\nAfter the countdown, it draws multiple cyan-colored pentagons in a circular pattern.\nThe program blends time-based animation and creative turtle drawing.",
    "download link": "https://drive.usercontent.google.com/download?id=18oa5KrY5plBS4ryoe6--47p9hOF27Cwh&export=download&authuser=1&confirm=t&uuid=6402a7c8-d43c-4789-b107-7cb7d74664a5&at=AN8xHoqfRKEEypfPR2DRMuqas1Ly:1757997893758",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=1TAIul6-q-TAOQjTTvixz-sWmIeutdsDE"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/1cd-tTGnD9xQS-UDql560PezlKU3w4U7x/view?usp=sharing",
    "page description ": "This Python program utilizes the Turtle graphics module together with the colorsys and time libraries to produce a hypnotic animated art effect. The drawing begins only after a short countdown, enhancing the interactive feel of the project. The screen is set up with a black background using Screen().bgcolor('black'), while the drawing turtle is configured at maximum speed (speed(0)) and a pen size of 2 for clear visible lines.\n\nBefore starting the artwork, a countdown from 15 seconds is displayed at the center of the screen using t.write(). The program pauses one second between updates with time.sleep(1) to show a real-time countdown. After the countdown finishes, the turtle clears the text and begins drawing circles.\n\nThe drawing loop creates 100 circles. Each circle’s radius increases incrementally, starting from 5 pixels and increasing by 3 each iteration. The turtle’s position slightly shifts on both the x and y axes before each circle, giving the appearance that the circles spiral outward. The color is dynamically generated using the colorsys.hsv_to_rgb() function, which produces a smooth rainbow transition by incrementing the hue with each circle.\n\nThe final result is a vibrant, colorful set of concentric circles that form a mesmerizing hypnotic effect.",
    "File Name ": "Hypnotic Concentric Circles",
    "short description ": "This Python script uses Turtle graphics to create hypnotic concentric circles.\nIt begins with a 15-second countdown on a black background.\nThen it draws 100 colorful circles with increasing radius and slight positional shifts.\nThe hues change gradually, producing a mesmerizing spiral-like visual effect.",
    "download link": "https://drive.usercontent.google.com/download?id=1cd-tTGnD9xQS-UDql560PezlKU3w4U7x&export=download&authuser=1&confirm=t&uuid=afcd7292-3d07-496a-a0e6-be16880b003c&at=AN8xHor0cg0qqCFdR551CXBr68AV:1757997611916",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=1TAIul6-q-TAOQjTTvixz-sWmIeutdsDE"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/1llC7hQF8rNpa5vZNH1_b2h4Q3Fv3BY5T/view?usp=sharing",
    "page description ": "This Python program creatively combines the Turtle graphics library and the Python time module to produce an animated countdown followed by a colorful spiral pattern. It starts by setting up the screen using turtle.Screen(), choosing a black background and a custom title. A separate turtle named counter is used solely to display text on the screen. This turtle is hidden, set to white color, and positioned at the center for the countdown display.\n\nThe countdown() function takes an integer number of seconds and uses a loop to display a decrementing message (“Starting in X...”) each second. It uses write() to draw text and time.sleep(1) to pause, creating a real-time countdown effect. When the timer finishes, it briefly shows “Let’s go!” before clearing the screen to begin the drawing phase.\n\nAfter the countdown ends, another turtle t is created for drawing. It is set to light green color, pen size 2, and maximum speed (speed(0)) to draw smoothly. The drawing loop runs 100 times, and in each iteration the turtle draws a six-sided hexagon with increasing side lengths. After each hexagon, it rotates 10 degrees, producing a stunning expanding spiral of overlapping hexagons that forms an eye-catching geometric art pattern.",
    "File Name ": "hexagon_spiral",
    "short description ": "This Python script uses Turtle graphics to show a countdown and draw spiral hexagon art.\nIt begins with a 15-second countdown message on a black background.\nAfterward, it draws expanding hexagonal patterns in light green color.\nThe design combines time-based animation with geometric drawing effects.",
    "download link": "https://drive.usercontent.google.com/download?id=1llC7hQF8rNpa5vZNH1_b2h4Q3Fv3BY5T&export=download&authuser=1&confirm=t&uuid=4a31ecd3-65d8-473f-afab-40442d4adb77&at=AN8xHopXjL_pLyuHOLH_HNZTfVoJ:1757997606823",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=1wLgRJjsOCM425o1cgONwzxck06E7mQmx"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/1rF8YhJHUlH7XOYhasnI1Oo3hmrEdQFbC/view?usp=sharing",
    "page description ": "This Python script uses the Turtle Graphics library to create a visually striking, color-shifting spiral after a countdown sequence. The program begins by setting up a black background canvas with a white countdown text shown at the center of the screen. A separate hidden turtle named counter displays the countdown numbers from 15 down to 1, pausing for one second between each number using the time.sleep() function. When the countdown ends, a short “Let’s go!” message is displayed, creating a smooth transition from waiting to drawing mode.\n\nOnce the countdown completes, a new drawing turtle (t) is created to handle the main art. The program sets its speed to maximum (speed(0)) for fast drawing and defines a thin pen size for smooth lines. It uses the colorsys library to convert hue values from HSV color space into RGB colors, enabling continuous rainbow-like color changes. The turtle then executes a loop of 360 iterations, each time moving forward slightly farther and turning right by 59 degrees. Simultaneously, the hue increases, causing the color to shift gradually as the spiral expands.\n\nThe outcome is a vivid, hypnotic spiral design that showcases smooth color transitions and geometric beauty.",
    "File Name ": "rainbow_spiral",
    "short description ": "This Turtle Graphics program displays a countdown timer before starting the drawing.\nIt draws a colorful spiral pattern on a black background.\nThe colors change smoothly using the colorsys library (HSV to RGB conversion).\nThe result is a vibrant and mesmerizing piece of generative art.",
    "download link": "https://drive.usercontent.google.com/download?id=1rF8YhJHUlH7XOYhasnI1Oo3hmrEdQFbC&export=download&authuser=1&confirm=t&uuid=c76527bd-7662-424e-b2f5-8d3c4c5ff7c8&at=AN8xHorQzImaR1y5LGlKYK6WdQgS:1757997885482",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=1TAIul6-q-TAOQjTTvixz-sWmIeutdsDE"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/1-xzzgDAJfQ1yZ8EQ8U02NtsG2lHpJBrM/view?usp=sharing",
    "page description ": "This Python program uses the Turtle module to create a dynamic triangular spiral design preceded by a countdown. It begins by setting up the turtle screen with a black background (screen.bgcolor('black')) and a title. A secondary turtle named counter is created to display text during the countdown. This counter turtle is hidden, colored white, positioned at the center, and used only for showing messages.\n\nThe countdown function takes a number of seconds (15 in this case) and displays “Starting in X...” on the screen, decreasing X by 1 each second. After finishing the countdown, it briefly shows “Let’s go!” before clearing the text. This creates anticipation before the artwork begins.\n\nOnce the countdown completes, the main turtle t is used to draw the design. It is set to maximum speed (speed(0)), has a white pen color, and a pen size of 2 for visible lines. The drawing loop runs 50 times. In each iteration, the turtle draws an equilateral triangle whose side length increases with every loop (i * 5), then rotates slightly (left(5)) before the next set.\n\nThese overlapping, increasingly larger triangles form an intricate, spiral-like geometric flower pattern on the black canvas.",
    "File Name ": "nested_triangles",
    "short description ": "This Python script uses Turtle graphics to draw a spiral of expanding triangles.\nIt starts with a 15-second countdown on a black background.\nAfter the countdown, white triangles are drawn while gradually rotating.\nThe result is a hypnotic, flower-like geometric pattern.",
    "download link": "https://drive.usercontent.google.com/download?id=1-xzzgDAJfQ1yZ8EQ8U02NtsG2lHpJBrM&export=download&authuser=1&confirm=t&uuid=46eeeb88-f6d6-4006-8a4d-cb99ce0b42cd&at=AN8xHoqlofgmupr7UFgRw4zUfILo:1757997617342",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=1TAIul6-q-TAOQjTTvixz-sWmIeutdsDE"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/1uQFqSZN-jLDwjwMTjRy7lyStpKM742Ii/view?usp=sharing",
    "page description ": "This Python program employs the Turtle graphics library to create a colorful starburst design with a countdown introduction. It begins by initializing a drawing screen with a black background (screen.bgcolor('black')) and a title. A hidden turtle named counter is used solely to display countdown text. Positioned at the center, it writes messages in white using the write method.\n\nThe countdown function counts down from 15 to 1 seconds, updating the text each second with time.sleep(1) delays. When the countdown ends, it briefly displays “Let’s go!” before clearing the text. This creates anticipation before the artwork begins.\n\nAfter the countdown, the main turtle t is set to maximum speed (speed(0)) for smooth, fast drawing. A list of six colors (red, blue, green, yellow, purple, orange) is defined. The drawing loop runs 72 times. In each iteration, the turtle chooses a color from the list (colors[i % 6]), moves forward 100 pixels from the center, then immediately moves backward 100 pixels to return to the center, and rotates right by 5 degrees.\n\nThis produces 72 evenly spaced colored lines radiating from the center, forming a bright, circular starburst pattern against the black background.",
    "File Name ": "colorful_starburst",
    "short description ": "This Python script uses Turtle graphics to draw a colorful starburst pattern.\nIt starts with a 15-second countdown on a black screen.\nThen the turtle draws lines radiating from the center in different colors.\nThe result is a vibrant circular burst of rainbow-like beams.",
    "download link": "https://drive.usercontent.google.com/download?id=1uQFqSZN-jLDwjwMTjRy7lyStpKM742Ii&export=download&authuser=1&confirm=t&uuid=5174caf2-90d5-4ad1-95d6-731b83ff215a&at=AN8xHooq_I8IEYhQhrFhYLsKN-BA:1757997596712",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=17i5j67eaiPkpOOAwcX-xwOav2VWJ97b1"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/1lXZ6YNLkNW_ZxEr4UQnTDvYSt_dwWbjY/view?usp=sharing",
    "page description ": "This project demonstrates how to create beautiful geometric art using the Turtle graphics library in Python. It combines simple shapes, loops, and color transitions to produce an eye-catching pattern while teaching essential programming concepts. When the program starts, it first displays a countdown timer in the center of the screen. This countdown, shown in bold white text on a black background, builds anticipation before the drawing begins. After the countdown completes, the turtle begins drawing colorful overlapping squares arranged in a circular pattern. Each square is rotated slightly compared to the previous one, creating a mesmerizing mandala-like effect. The program uses basic programming techniques such as loops, color manipulation, and pen control, making it an excellent project for beginners to understand logic and creative coding. The use of HSV color conversion ensures smooth transitions between colors, adding vibrancy to the artwork. This project is perfect for students, hobbyists, or anyone who wants to explore the creative side of coding. It also demonstrates how visual feedback can make learning programming more engaging and fun. By combining art and code, this turtle graphics project encourages creativity while strengthening logical thinking and problem-solving skills.",
    "File Name ": "square_flower",
    "short description ": "Create stunning geometric art using Python’s Turtle graphics.\nA countdown timer builds excitement before the drawing starts.\nColorful overlapping squares spin to form a mandala-like pattern.\nFun, simple, and perfect for learning coding with visuals.",
    "download link": "https://drive.usercontent.google.com/download?id=1lXZ6YNLkNW_ZxEr4UQnTDvYSt_dwWbjY&export=download&authuser=1&confirm=t&uuid=f907497b-edba-4052-9caf-cd284fdcfbc1&at=AN8xHooaaz5hTJCSIdJ1PgtFhOCZ:1757997744362",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=1TAIul6-q-TAOQjTTvixz-sWmIeutdsDE"
  },
  {
    "ID": null,
    "preview link": "https://drive.google.com/file/d/1irKfHq9CDfGE7EPLdC3R_3PAqsZAwyYv/view?usp=sharing",
    "page description ": "This Python program creates a vibrant spirograph-like drawing using the Turtle graphics module. It first sets up a drawing screen with a black background to enhance color visibility. A turtle object t is created, configured for maximum drawing speed (speed(0)) and a thin pen (pensize(1)) for sharp details.\n\nBefore the main drawing starts, a 15-second countdown is displayed at the center using the same turtle. This gives a visual pause before the animation begins. The countdown text is written in white, and each number is displayed for one second using time.sleep(1).\n\nThe program then defines three key spirograph parameters:\n\nR (radius of the fixed outer circle)\n\nr (radius of the rotating inner circle)\n\nd (distance from the center of the inner circle to the drawing pen)\n\nUsing these values, it calculates the total angle required for the smaller circle to complete full rotations and produce a closed pattern. Inside a loop, it computes x and y coordinates with the spirograph parametric equations, which involve cos and sin functions.\n\nEach step smoothly transitions colors by converting HSV values to RGB. The result is a mesmerizing, colorful geometric figure resembling traditional spirograph artwork.",
    "File Name ": "Spectral Spirograph",
    "short description ": "This Python script uses Turtle graphics to draw a spirograph-like pattern.\nIt starts with a 15-second countdown on a black background.\nThen it uses mathematical spirograph equations to plot smooth curves.\nThe result is a colorful, intricate geometric design made of looping paths.",
    "download link": "https://drive.usercontent.google.com/download?id=1irKfHq9CDfGE7EPLdC3R_3PAqsZAwyYv&export=download&authuser=1&confirm=t&uuid=38b0893a-660c-49d3-a62e-3222f56ff7b7&at=AN8xHoqYwiz_wGiP3m781ilkCf1L:1757997843236",
    "File type ": "python file ",
    "Img link ": "https://drive.google.com/uc?id=1TAIul6-q-TAOQjTTvixz-sWmIeutdsDE"
  }
]